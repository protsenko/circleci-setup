version: 2.1

orbs:
  docker-publish: circleci/docker-publish@0.1.6

executors:
  circleci-setup-executor:
    docker:
      - image: circleci/openjdk:8u162-jdk


jobs:
  unit-test:
    executor: circleci-setup-executor
    steps:
      - checkout
      - restore_cache:
          key: ${CIRCLE_PROJECT_REPONAME}-{{ checksum "pom.xml" }}
      - run: mvn dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: ${CIRCLE_PROJECT_REPONAME}-{{ checksum "pom.xml" }}
      - run: mvn test
      - persist_to_workspace:
          root: ~/
          paths:
            - .

  integration-test:
    executor: circleci-setup-executor
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          key: ${CIRCLE_PROJECT_REPONAME}-{{ checksum "pom.xml" }}
      - run: mvn verify -Dskip.surefire.tests=true
      - persist_to_workspace:
          root: ~/
          paths:
            - .

  mutation-test:
    executor: circleci-setup-executor
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          key: ${CIRCLE_PROJECT_REPONAME}-{{ checksum "pom.xml" }}
      - run: mvn org.pitest:pitest-maven:mutationCoverage
      - persist_to_workspace:
          root: ~/
          paths:
            - .

  static-analysis:
    executor: circleci-setup-executor
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          key: ${CIRCLE_PROJECT_REPONAME}-{{ checksum "pom.xml" }}
      - run: mvn sonar:sonar -Dsonar.organization=${SONAR_ORGANIZATION} -Dsonar.host.url=${SONAR_HOST} -Dsonar.login=${SONAR_TOKEN} -Dsonar.projectKey=${PROJECT_KEY} -Dsonar.branch.name=${CIRCLE_BRANCH}

  spotbugs-analysis:
    executor: circleci-setup-executor
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          key: ${CIRCLE_PROJECT_REPONAME}-{{ checksum "pom.xml" }}
      - run: mvn spotbugs:check

  checkstyle-analysis:
    executor: circleci-setup-executor
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          key: ${CIRCLE_PROJECT_REPONAME}-{{ checksum "pom.xml" }}
      - run: mvn checkstyle:check

  packaging:
    executor: circleci-setup-executor
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          key: ${CIRCLE_PROJECT_REPONAME}-{{ checksum "pom.xml" }}
      - run: mvn package -Dmaven.test.skip=true
      - persist_to_workspace:
          root: ~/
          paths:
            - .

  docker-build:
    executor: docker-publish/docker
    steps:
      - attach_workspace:
          at: ~/
      - setup_remote_docker
      - docker-publish/check
      - docker-publish/build:
          dockerfile: ./docker/Dockerfile
          extra_build_args: '--build-arg PROJECT_NAME=${CIRCLE_PROJECT_REPONAME}
            --build-arg PROJECT_REPO_URL=${CIRCLE_REPOSITORY_URL}
            --build-arg VCS_REF=${CIRCLE_SHA1}'
      - docker-publish/deploy

  docker-build-latest:
    executor: docker-publish/docker
    steps:
      - attach_workspace:
          at: ~/
      - setup_remote_docker
      - docker-publish/check
      - docker-publish/build:
          dockerfile: ./docker/Dockerfile
          extra_build_args: '--build-arg PROJECT_NAME=${CIRCLE_PROJECT_REPONAME}
            --build-arg PROJECT_REPO_URL=${CIRCLE_REPOSITORY_URL}
            --build-arg VCS_REF=${CIRCLE_SHA1}'
          tag: latest
      - docker-publish/deploy


workflows:
  version: 2
  standart-workflow:
    jobs:
      - unit-test
      - integration-test:
          requires:
            - unit-test
      - mutation-test:
          requires:
            - integration-test
      - static-analysis:
          context: sonarcloud
          requires:
            - mutation-test
      - spotbugs-analysis:
          requires:
            - mutation-test
      - checkstyle-analysis:
          requires:
            - mutation-test
      - packaging:
          requires:
            - static-analysis
            - spotbugs-analysis
            - checkstyle-analysis
      - docker-build:
          context: dockerhub
          requires:
            - packaging
      - docker-build-latest:
          context: dockerhub
          requires:
            - packaging
          filters:
            branches:
              only: master